package templates

import (
      "github.com/FkLalita/hano/models"
      "fmt"
)

templ GetMessage(messages []models.Message, post_id int) {
    <div id="chatSection">
      <!-- Existing chat rendered here -->
      <p>chatr</p>
      
        for  _, m := range messages {
          <ul id="chatList-{m.TopicID}" hx-get={fmt.Sprintf("/topics/%d/messages", m.TopicID)}>
            <!-- HTMX will populate this list with comments -->
            <li>{ m.MessageContent }</li>
          </ul>
          }
          <div id="chat" >
            <p>
                test chat should show here
            </p>
          </div>
    
      <form class="chatForm" hx-post={fmt.Sprintf("/topics/%d/messages", post_id )} >
        <input type="text" name="message" id="message-input" required/>
        <button type="submit" id="send-button" >Submit</button>
      </form>
    </div>

    <!-- Include HTMX library -->
    <script src="/node_modules/htmx.org/dist/htmx.js"></script>
    <script>
      console.log("het test");
      
      const socket = new WebSocket("ws://localhost:8080/ws");

      socket.onopen = function()  {
        console.log("WebSocket connection opened!");
      };

      socket.addEventListener("message", (event) => {
        console.log("Received message:", event.data);
        const data = JSON.parse(event.data);
        const chatDiv = document.getElementById("chat");
        const message = document.createElement("p");

        message.textContent = data.content;
        
        chatDiv.appendChild(message);
      });

      function sendMessage() {
        const messageInput = document.getElementById("message-input");
        const message = messageInput.value.trim();

        if (message !== "") {
            socket.send(message);

            messageInput.value = "";
          }
      } 

      const sendButton = document.getElementById("send-button");
      sendButton.addEventListener("click", sendMessage);

      socket.onclose = function(event) {
        console.log("WebSocket connection closed:", event);
      };

      socket.onerror = function(error) {
        console.error("WebSocket connection error:", error);
      };
         
    </script>


}
