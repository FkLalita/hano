// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
	"github.com/FkLalita/hano/models"
)

func GetMessage(messages []models.Message, post_id int) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"chatSection\"><!-- Existing chat rendered here --><p>chatr</p>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, m := range messages {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li id=\"chatList-{m.TopicID}\" hx-get=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/topics/%d/messages", m.TopicID))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/message.templ`, Line: 14, Col: 93}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><!-- HTMX will populate this list with comments -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(m.MessageContent)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/message.templ`, Line: 16, Col: 30}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"chat\"><p>test chat should show here</p></div><form class=\"chatForm\" hx-post=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/topics/%d/messages", post_id))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/message.templ`, Line: 25, Col: 82}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><input type=\"text\" name=\"message\" id=\"message-input\" required> <button type=\"submit\" id=\"send-button\">Submit</button></form></div><!-- Include HTMX library --><script src=\"/node_modules/htmx.org/dist/htmx.js\"></script><script>\n      console.log(\"het test\");\n      \n      const socket = new WebSocket(\"ws://localhost:8080/ws\");\n\n      socket.onopen = function()  {\n        console.log(\"WebSocket connection opened!\");\n      };\n\n      socket.addEventListener(\"message\", (event) => {\n        console.log(\"Received message:\", event.data);\n        const data = JSON.parse(event.data);\n        const chatDiv = document.getElementById(\"chat\");\n        const message = document.createElement(\"p\");\n        console.log(\"data -\", data)\n        console.log(\"message before i added content \",message)\n        message.textContent = data.content;\n        console.log(\"after \", message)\n        chatDiv.appendChild(message);\n        console.log(\"after i append it to chatDiv\",message)\n        console.log(data.content)\n      });\n\n      function sendMessage() {\n        const messageInput = document.getElementById(\"message-input\");\n        const message = messageInput.value.trim();\n\n        if (message !== \"\") {\n            socket.send(message);\n\n            messageInput.value = \"\";\n          }\n      } \n\n      const sendButton = document.getElementById(\"send-button\");\n      sendButton.addEventListener(\"click\", sendMessage);\n\n      socket.onclose = function(event) {\n        console.log(\"WebSocket connection closed:\", event);\n      };\n\n      socket.onerror = function(error) {\n        console.error(\"WebSocket connection error:\", error);\n      };\n         \n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
